@use "sass:math";

/* base layout classes */
.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 20px;
	box-sizing: border-box;
}

/* Row */
.row {
	display: flex;
	flex-wrap: wrap;
}

/* Grid gaps */
@each $key, $val in $grid-gaps {
	.gap-#{$key} > * {
		padding: $val;
	}
	.gap-#{$key} {
		margin-left: -$val;
		margin-right: -$val;
	}
}

/* Justify content classes */
@each $val in $layout-values {
	.justify-#{$val} {
		justify-content: $val;
	}
}

/* Column classes */
@include xs {
	@for $i from 1 through $grid-columns {
		.col-xs-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include sm {
	@for $i from 1 through $grid-columns {
		.col-sm-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include md {
	@for $i from 1 through $grid-columns {
		.col-md-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include lg {
	@for $i from 1 through $grid-columns {
		.col-lg-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include xl {
	@for $i from 1 through $grid-columns {
		.col-xl-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
